/*
 * Copyright 2018 Google LLC. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Edit package name in gradle.properties
println "Using configuration from gradle.properties"
println "Using package name: $androidApplicationId"
println "Using keystore properties: $keystorePropertiesFilename"

ext {
    // Keystore information is loaded from a file.
    keystorePropertiesFile = rootProject.file(keystorePropertiesFilename)
    keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    } else {
        println "Cannot find keystore properties file. " +
                "A) Create this file, B) use a different file, or C) use assembleDebug."
        println "A) Create $keystorePropertiesFilename"
        println "B) ./gradlew -PkeystorePropertiesFilename=release-keystore.properties assembleRelease"
        println "C) ./gradlew assembleDebug"
        println ""
    }
    keystoreFilename = keystoreProperties['storeFile']
    // Signing config values.
    keystoreStoreFile = keystoreFilename == null ? null : rootProject.file(keystoreFilename)
    keystoreStorePassword = keystoreProperties['storePassword']
    keystoreKeyAlias = keystoreProperties['keyAlias']
    keystoreKeyPassword = keystoreProperties['keyPassword']

    // Android version information.
    androidMinimumSdkVersion = 31
    androidTargetSdkVersion = 33
    androidCompileSdkVersion = 33
}

buildscript {
    ext {
        // Library versions.
        billingVersion = '6.0.0'
        coroutinesVersion = '1.6.0'
        firebaseUiVersion = '8.0.0'
        glideVersion = '4.13.0'
        gsonVersion = '2.9.0'
        jsonVersion = '20140107'
        fragmentVersion = '1.5.6'
        firebaseBomVersion = '28.4.1'
        lifecycleVersion = '2.6.1'
        lifecycleExtentionsVersion = '2.2.0'
        materialUiVersion = '1.8.0'
        playServicesVersion = '20.4.1'
        retrofitSuiteVersion = '2.9.0'
        roomVersion = '2.5.1'
        interceptorVersion = '3.8.0'
        leanbackPreferenceVersion = '1.0.0'
        cardViewVersion = '1.0.0'
        appCompatVersion = '1.6.1'

        // Tools versions.
        gradleGoogleVersion = '4.3.15'
        gradleToolsVersion = '7.4.2'
        kotlinVersion = '1.8.10'

        // Testing versions.
        androidXTestCoreVersion = '1.5.0'
        androidXTestExtKotlinRunnerVersion = '1.1.5'
        archTestingVersion = '2.2.0'
        hamcrestVersion = '2.2'
        jUnitVersion = '4.13.2'
        mockitoVersion = '4.3.0'
        mockKVersion = '1.12.3'
        robolectricVersion = '4.7.3'
        expressoVersion = "3.5.1"

        // Compose versions.
        compose_version = "1.4.2"
        nav_version = "2.5.3"
        lifecycleVersion = "2.6.1"
        activityComposeVersion = "1.7.0"
        glideComposeVersion = "1.0.0-alpha.1"
    }

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradleToolsVersion"
        classpath "com.google.gms:google-services:$gradleGoogleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}
